/**
 * @file This file is auto-generated using scripts/generate-routes.ts
 * DO NOT EDIT THIS FILE DIRECTLY!
 *
 * To update this file:
 * 1. Modify the pages directory structure as needed
 * 2. Run: npx ts-node scripts/generate-routes.ts
 * 3. Review the changes
 *
 * The script will:
 * - Update paths to match the pages directory structure
 * - Preserve existing metadata (titles, IDs, redirects)
 * - Add any new files it finds
 * - Validate file existence
 */

import { z } from 'zod'

// Schema for route definition
const routeSchema = z.object({
  path: z.string(),
  title: z.string(),
  id: z.string(), // Used for referencing in markdown/code
  section: z.string().optional(),
  description: z.string().optional(),
  deprecated: z.boolean().optional(),
  redirectFrom: z.array(z.string()).optional(),
})

export type DocRoute = z.infer<typeof routeSchema>

// Type for the entire route map
export type DocRouteMap = {
  [K: string]: DocRoute
}

// Central route registry
export const docRoutes: DocRouteMap = {
  introduction: {
    path: '/01-introduction',
    title: 'Introduction',
    id: 'intro',
    section: 'overview',
    redirectFrom: ['/introduction'],
  },

  aiArchitecture: {
    path: '/ai/architecture',
    title: 'AI Architecture',
    id: 'ai-arch',
    section: 'ai',
  },

  aiCost: {
    path: '/ai/cost',
    title: 'AI Cost',
    id: 'ai-cost',
    section: 'ai',
  },

  aiOverview: {
    path: '/ai/overview',
    title: 'AI Overview',
    id: 'ai-overview',
    section: 'ai',
  },

  aiSetup: {
    path: '/ai/setup',
    title: 'AI Setup',
    id: 'ai-setup',
    section: 'ai',
  },

  advancedConfig: {
    path: '/deployments/advanced-configuration',
    title: 'Advanced Configuration',
    id: 'adv-config',
    section: 'deployments',
  },

  deploymentsArchitecture: {
    path: '/deployments/architecture',
    title: 'Deployments Architecture',
    id: 'deploy-arch',
    section: 'deployments',
  },

  cliQuickstart: {
    path: '/deployments/cli-quickstart',
    title: 'CLI Quickstart',
    id: 'cli-quick',
    section: 'deployments',
  },

  deploymentsDashboard: {
    path: '/deployments/dashboard',
    title: 'Kubernetes Dashboard',
    id: 'k8s-dashboard',
    section: 'deployments',
  },

  deploymentsDeprecations: {
    path: '/deployments/deprecations',
    title: 'Deprecations',
    id: 'deprecations',
    section: 'deployments',
  },

  existingCluster: {
    path: '/deployments/existing-cluster',
    title: 'Using Existing Cluster',
    id: 'existing-cluster',
    section: 'deployments',
  },

  deploymentsGit: {
    path: '/deployments/git',
    title: 'Git Integration',
    id: 'git-integration',
    section: 'deployments',
  },

  deployments_global_services: {
    path: '/deployments/global-services',
    title: 'Configure Global Services',
    id: 'deployments_global_services',
    section: 'deployments',
  },

  deploymentsHelm: {
    path: '/deployments/helm',
    title: 'Helm Integration',
    id: 'helm-integration',
    section: 'deployments',
  },

  deploymentsImportCluster: {
    path: '/deployments/import-cluster',
    title: 'Import Cluster',
    id: 'import-cluster',
    section: 'deployments',
  },

  deploymentsMicroservices: {
    path: '/deployments/manage-your-microservices',
    title: 'Manage Your Microservices',
    id: 'manage-microservices',
    section: 'deployments',
  },

  deploymentsMonitoring: {
    path: '/deployments/monitoring-addons',
    title: 'Monitoring Add-ons',
    id: 'monitoring-addons',
    section: 'deployments',
  },

  deployments_multi_tenancy: {
    path: '/deployments/multi-tenancy',
    title: 'Projects and Multi Tenancy',
    id: 'deployments_multi_tenancy',
    section: 'deployments',
  },

  deploymentsNetworkAddons: {
    path: '/deployments/network-addons',
    title: 'Network Add-ons',
    id: 'network-addons',
    section: 'deployments',
  },

  networkConfig: {
    path: '/deployments/network-configuration',
    title: 'Network Configuration',
    id: 'net-config',
    section: 'deployments',
  },

  deploymentsNotifications: {
    path: '/deployments/notifications',
    title: 'Notifications',
    id: 'notifications',
    section: 'deployments',
  },

  deploymentsOperations: {
    path: '/deployments/operations',
    title: 'Operations',
    id: 'operations',
    section: 'deployments',
  },

  operatorApi: {
    path: '/deployments/operator/api',
    title: 'Operator API Reference',
    id: 'operator-api',
    section: 'operator',
  },

  operatorArchitecture: {
    path: '/deployments/operator/architecture',
    title: 'Operator Architecture',
    id: 'operator-arch',
    section: 'operator',
  },

  gitService: {
    path: '/deployments/operator/git-service',
    title: 'Git Service',
    id: 'git-service',
    section: 'operator',
  },

  globalService: {
    path: '/deployments/operator/global-service',
    title: 'Global Service',
    id: 'global-service',
    section: 'operator',
  },

  helmService: {
    path: '/deployments/operator/helm-service',
    title: 'Helm Service',
    id: 'helm-service',
    section: 'operator',
  },

  deploymentsPipelines: {
    path: '/deployments/pipelines',
    title: 'Pipelines',
    id: 'pipelines',
    section: 'deployments',
  },

  prCrds: {
    path: '/deployments/pr/crds',
    title: 'PR CRDs',
    id: 'pr-crds',
    section: 'pr',
  },

  prPipelines: {
    path: '/deployments/pr/pipelines',
    title: 'PR Pipelines',
    id: 'pr-pipes',
    section: 'pr',
  },

  prTesting: {
    path: '/deployments/pr/testing',
    title: 'PR Testing',
    id: 'pr-test',
    section: 'pr',
  },

  prAutomation: {
    path: '/deployments/pr-automation',
    title: 'PR Automation',
    id: 'pr-auto',
    section: 'pr',
  },

  privateCA: {
    path: '/deployments/private-ca',
    title: 'Private CA',
    id: 'private-ca',
    section: 'deployments',
  },

  sandboxing: {
    path: '/deployments/sandboxing',
    title: 'Sandboxing',
    id: 'sandbox',
    section: 'deployments',
  },

  deploymentsSecurityAddons: {
    path: '/deployments/security-addons',
    title: 'Security Add-ons',
    id: 'security-addons',
    section: 'deployments',
  },

  deploymentsServicesDeploy: {
    path: '/deployments/services-deploy',
    title: 'Deploy Services',
    id: 'services-deploy',
    section: 'deployments',
  },

  deploymentsServices: {
    path: '/deployments/services',
    title: 'Services',
    id: 'services',
    section: 'deployments',
  },

  deployments_stacks: {
    path: '/deployments/stacks',
    title: 'Stacks',
    id: 'deployments_stacks',
    section: 'deployments',
  },

  templatingFilters: {
    path: '/deployments/templating-filters',
    title: 'Templating Filters',
    id: 'templating-filters',
    section: 'deployments',
  },

  templating: {
    path: '/deployments/templating',
    title: 'Service Templating',
    id: 'templating',
    section: 'deployments',
  },

  terraformInterop: {
    path: '/deployments/terraform-interop',
    title: 'Terraform Interoperability',
    id: 'terraform-interop',
    section: 'deployments',
  },

  deployments_upgrades: {
    path: '/deployments/upgrades',
    title: 'Upgrades and Rollbacks',
    id: 'deployments_upgrades',
    section: 'deployments',
  },

  usingOperator: {
    path: '/deployments/using-operator',
    title: 'Using the Operator',
    id: 'using-operator',
    section: 'deployments',
  },

  faqSecurity: {
    path: '/faq/01-security',
    title: 'Security FAQ',
    id: 'faq-security',
    section: 'faq',
  },

  faqOidc: {
    path: '/faq/02-plural-oidc',
    title: 'Plural OIDC FAQ',
    id: 'faq-oidc',
    section: 'faq',
  },

  faqCertifications: {
    path: '/faq/03-certifications',
    title: 'Certifications FAQ',
    id: 'faq-cert',
    section: 'faq',
  },

  faqPaidTiers: {
    path: '/faq/04-paid-tiers',
    title: 'Paid Tiers FAQ',
    id: 'faq-tiers',
    section: 'faq',
  },

  cloudShellQuickstart: {
    path: '/getting-started/cloud-shell-quickstart',
    title: 'Cloud Shell Quickstart',
    id: 'cloud-shell',
    section: 'getting-started',
  },

  gettingStartedDeployments: {
    path: '/getting-started/deployments',
    title: 'Getting Started with Deployments',
    id: 'gs-deployments',
    section: 'getting-started',
  },

  gitRepos: {
    path: '/getting-started/manage-git-repositories',
    title: 'Managing Git Repositories',
    id: 'git-repos',
    section: 'git',
  },

  gitopsSetup: {
    path: '/getting-started/manage-git-repositories/setting-up-gitops',
    title: 'Setting up GitOps',
    id: 'gitops-setup',
    section: 'git',
  },

  sharingGitRepos: {
    path: '/getting-started/manage-git-repositories/sharing-git-repositories',
    title: 'Sharing Git Repositories',
    id: 'share-git',
    section: 'git',
  },

  workspaceEncryption: {
    path: '/getting-started/manage-git-repositories/workspace-encryption',
    title: 'Workspace Encryption',
    id: 'workspace-enc',
    section: 'git',
  },

  pluralWorkspace: {
    path: '/getting-started/manage-git-repositories/your-plural-workspace',
    title: 'Your Plural Workspace',
    id: 'workspace',
    section: 'git',
  },

  marketplace: {
    path: '/getting-started/marketplace',
    title: 'Marketplace',
    id: 'marketplace',
    section: 'getting-started',
  },

  openidConnect: {
    path: '/getting-started/openid-connect',
    title: 'OpenID Connect',
    id: 'oidc',
    section: 'getting-started',
  },

  pluralDifference: {
    path: '/getting-started/plural-difference',
    title: 'The Plural Difference',
    id: 'plural-diff',
    section: 'getting-started',
  },

  quickstart: {
    path: '/getting-started/quickstart',
    title: 'Quickstart Guide',
    id: 'quickstart',
    section: 'getting-started',
  },

  understandingUpgrades: {
    path: '/getting-started/understanding-upgrades',
    title: 'Understanding Upgrades',
    id: 'upgrades',
    section: 'getting-started',
  },

  videoCliQuickstart: {
    path: '/getting-started/video-cli-quickstart',
    title: 'Video CLI Quickstart',
    id: 'video-cli',
    section: 'getting-started',
  },

  deployMicroservice: {
    path: '/how-to/deploy/microservice',
    title: 'Deploy Microservice',
    id: 'deploy-micro',
    section: 'how-to',
  },

  deployPipelines: {
    path: '/how-to/deploy/pipelines',
    title: 'Deploy Pipelines',
    id: 'deploy-pipes',
    section: 'how-to',
  },

  deployPrAuto: {
    path: '/how-to/deploy/pr-automation',
    title: 'Deploy PR Automation',
    id: 'deploy-pr',
    section: 'how-to',
  },

  howTo: {
    path: '/how-to',
    title: 'How To Guides',
    id: 'how-to',
    section: 'how-to',
  },

  setupControllers: {
    path: '/how-to/set-up/controllers',
    title: 'Set Up Controllers',
    id: 'setup-controllers',
    section: 'how-to',
  },

  setupMgmtCluster: {
    path: '/how-to/set-up/mgmt-cluster',
    title: 'Set Up Management Cluster',
    id: 'setup-mgmt',
    section: 'how-to',
  },

  setupRbac: {
    path: '/how-to/set-up/rbac',
    title: 'Set Up RBAC',
    id: 'setup-rbac',
    section: 'how-to',
  },

  setupScm: {
    path: '/how-to/set-up/scm-connection',
    title: 'Set Up SCM Connection',
    id: 'setup-scm',
    section: 'how-to',
  },

  setupWorkloadCluster: {
    path: '/how-to/set-up/workload-cluster',
    title: 'Set Up Workload Cluster',
    id: 'setup-workload',
    section: 'how-to',
  },

  releaseNotes: {
    path: '/reference/release-notes',
    title: 'Release Notes',
    id: 'release-notes',
    section: 'reference',
  },

  serviceCatalogContributing: {
    path: '/service-catalog/contributing',
    title: 'Contributing to Service Catalog',
    id: 'svc-cat-contrib',
    section: 'service-catalog',
    redirectFrom: ['/catalog/contributing'],
  },

  serviceCatalogCreation: {
    path: '/service-catalog/creation',
    title: 'Create Service Catalog',
    id: 'svc-cat-create',
    section: 'service-catalog',
    redirectFrom: ['/catalog/creation'],
  },

  serviceCatalogOverview: {
    path: '/service-catalog/overview',
    title: 'Service Catalog Overview',
    id: 'svc-cat-overview',
    section: 'service-catalog',
    redirectFrom: ['/catalog/overview'],
  },

  stacksAutoCancellation: {
    path: '/stacks/auto-cancellation',
    title: 'Auto-Cancellation',
    id: 'auto-cancellation',
    section: 'stacks',
  },

  stacksCustomStacks: {
    path: '/stacks/custom-stacks',
    title: 'Custom Stacks',
    id: 'custom-stacks',
    section: 'stacks',
  },

  stacksCustomizeRunners: {
    path: '/stacks/customize-runners',
    title: 'Customize Stack Runners',
    id: 'customize-runners',
    section: 'stacks',
  },

  stacksLocalExecution: {
    path: '/stacks/local-execution',
    title: 'Local Execution',
    id: 'local-execution',
    section: 'stacks',
  },

  stacksManualRuns: {
    path: '/stacks/manual-runs',
    title: 'Manual Runs',
    id: 'manual-runs',
    section: 'stacks',
  },

  stacksPrWorkflow: {
    path: '/stacks/pr-workflow',
    title: 'PR Workflow',
    id: 'stacks-pr-workflow',
    section: 'stacks',
  },
} as const

// Type-safe route getter
export function getRoute(id: keyof typeof docRoutes): DocRoute {
  return docRoutes[id]
}

// Get route by ID (alias)
export function getRouteById(id: string): DocRoute | undefined {
  return Object.values(docRoutes).find((route) => route.id === id)
}

// Get all routes in a section
export function getRoutesBySection(section: string): DocRoute[] {
  return Object.values(docRoutes).filter((route) => route.section === section)
}

// Get route by path (including redirects)
export function getRouteByPath(path: string): DocRoute | undefined {
  // First try direct path match
  const directMatch = Object.values(docRoutes).find(
    (route) => route.path === path
  )
  if (directMatch) return directMatch

  // Then check redirects
  return Object.values(docRoutes).find((route) =>
    route.redirectFrom?.includes(path)
  )
}

// Validate all routes at runtime
Object.entries(docRoutes).forEach(([key, route]) => {
  try {
    routeSchema.parse(route)
  } catch (error) {
    console.error(`Invalid route configuration for "${key}":`, error)
  }
})
